{
	"name": "dataflowemp",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_Employee",
						"type": "DatasetReference"
					},
					"name": "empsource"
				},
				{
					"dataset": {
						"referenceName": "ds_newemployee",
						"type": "DatasetReference"
					},
					"name": "newempsource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Outputfolder",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "union1"
				},
				{
					"name": "Removeduplicaterows"
				},
				{
					"name": "sort1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          name as string,",
				"          gender as string,",
				"          salary as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> empsource",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> newempsource",
				"empsource, newempsource union(byName: true)~> union1",
				"union1 aggregate(groupBy(id),",
				"     each(match(name !='id'), $$ = first($$))) ~> Removeduplicaterows",
				"Removeduplicaterows sort(asc(id, true)) ~> sort1",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Allconsolidatedfile.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Empid = id,",
				"          Empname = name,",
				"          gender,",
				"          salary",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}